#include <WiFi.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>

const char* ssid = "Votre_SSID";
const char* password = "Votre_Mot_de_Passe";
const char* mqtt_server = "Adresse_IP_MQTT_Broker";
const char* device_name = "ESP32_Device";

WiFiClient espClient;
PubSubClient client(espClient);

// Variables pour MQTT
unsigned long lastMsg = 0;
char msg[50];
long uptime = 0;

// Crée un serveur web
WiFiServer server(80);

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connexion à ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connecté");
  Serial.print("Adresse IP : ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentative de connexion au serveur MQTT...");
    if (client.connect(device_name)) {
      Serial.println("connecté");
      // Enregistrement via autodiscovery MQTT
      publish_mqtt_autodiscovery();
    } else {
      Serial.print("échec, rc=");
      Serial.print(client.state());
      Serial.println(" nouvelle tentative dans 5 secondes");
      delay(5000);
    }
  }
}

void publish_mqtt_autodiscovery() {
  // Générer les configurations de l'ESP32 pour l'autodécouverte Home Assistant
  StaticJsonDocument<200> discovery_msg;
  discovery_msg["name"] = "ESP32 Uptime";
  discovery_msg["state_topic"] = String("homeassistant/sensor/") + device_name + "/uptime/state";
  discovery_msg["unit_of_measurement"] = "seconds";
  discovery_msg["device_class"] = "timestamp";

  char buffer[256];
  size_t n = serializeJson(discovery_msg, buffer);
  client.publish(String("homeassistant/sensor/") + device_name + "/uptime/config", buffer, n);
}

void send_status() {
  uptime = millis() / 1000;
  snprintf(msg, 50, "%ld", uptime);
  client.publish(String("homeassistant/sensor/") + device_name + "/uptime/state", msg);
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  
  client.setServer(mqtt_server, 1883);

  // Démarrer le serveur web
  server.begin();
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  unsigned long now = millis();
  if (now - lastMsg > 5000) {
    lastMsg = now;
    send_status(); // Envoi du temps de fonctionnement (uptime) à Home Assistant
  }

  // Gérer les requêtes du serveur web
  WiFiClient webClient = server.available();
  if (webClient) {
    if (webClient.available()) {
      webClient.println("<html><head><title>ESP32 Info</title></head><body>");
      webClient.println("<h1>ESP32 Web Server</h1>");
      webClient.print("<p>SSID: ");
      webClient.print(WiFi.SSID());
      webClient.println("</p>");
      webClient.print("<p>Uptime: ");
      webClient.print(uptime);
      webClient.println(" seconds</p>");
      webClient.println("</body></html>");
      webClient.stop();
    }
  }
}
